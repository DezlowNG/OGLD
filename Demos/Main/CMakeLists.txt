cmake_minimum_required(VERSION 3.20)
project(OGLD_MAIN)

set(CMAKE_CXX_STANDARD 17)

set(CMAKE_BINARY_DIR "${PROJECT_SOURCE_DIR}/../../bin/${CMAKE_SYSTEM_NAME}/${CMAKE_PROJECT_NAME}/${CMAKE_BUILD_TYPE}-${CMAKE_SYSTEM_PROCESSOR}")
set(OGLD_USE_IMGUI ON)

file(GLOB SHADERSFILES "Shaders/*")
file(GLOB TEXTURESFILES "Textures/*")
file(GLOB MODELSFILES "Models/*")

file(COPY ${SHADERSFILES} DESTINATION ${CMAKE_BINARY_DIR}/Shaders/)
file(COPY ${TEXTURESFILES} DESTINATION ${CMAKE_BINARY_DIR}/Textures/)
file(COPY ${MODELSFILES} DESTINATION ${CMAKE_BINARY_DIR}/Models/)

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/)

foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
    string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/other/)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/libs/)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR})
endforeach(OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES)

include_directories(../../OGLD/Source/)

file(GLOB SOURCE_FILES
        "Source/MainApp.cpp"
        )

add_executable(${CMAKE_PROJECT_NAME}
        ${SOURCE_FILES}
        )

add_subdirectory(../../OGLD/ ${CMAKE_BINARY_DIR})
target_link_libraries(${CMAKE_PROJECT_NAME}
        OGLD_LIBRARY
        )