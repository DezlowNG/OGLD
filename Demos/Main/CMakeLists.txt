cmake_minimum_required(VERSION 3.20)
project(OGLD_DEMO_MAIN)

set(CMAKE_CXX_STANDARD 20)

if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    set(CMAKE_BINARY_DIR "../../../../../bin/${CMAKE_SYSTEM_NAME}/${CMAKE_PROJECT_NAME}/${CMAKE_BUILD_TYPE}-${CMAKE_SYSTEM_PROCESSOR}")
elseif (NOT CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    set(CMAKE_BINARY_DIR "../../../bin/${CMAKE_SYSTEM_NAME}/${CMAKE_PROJECT_NAME}/${CMAKE_BUILD_TYPE}-${CMAKE_SYSTEM_PROCESSOR}")
endif()

file(GLOB SHADERFILES "Shaders/*.glsl")

file(COPY ${SHADERFILES} DESTINATION ${CMAKE_BINARY_DIR}/Shaders/)

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/)

foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
    string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR})
endforeach(OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES)

include_directories(../../OGLD/Source/)

file(GLOB SOURCE_FILES
        "Source/*.h"
        "Source/*.cpp"
        )

add_executable(OGLD_DEMO_MAIN
        ${SOURCE_FILES}
        )

add_subdirectory(../../OGLD/ ${CMAKE_BINARY_DIR})

target_link_libraries(${CMAKE_PROJECT_NAME}
        OGLD_LIBRARY
        )